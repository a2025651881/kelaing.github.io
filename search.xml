<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/keliang.github.io//keliang.github.io/"/>
      <url>/keliang.github.io//keliang.github.io/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySql</title>
      <link href="/keliang.github.io//keliang.github.io/"/>
      <url>/keliang.github.io//keliang.github.io/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL的基本使用"><a href="#SQL的基本使用" class="headerlink" title="SQL的基本使用"></a>SQL的基本使用</h1><h2 id="SQL的SELECT语句"><a href="#SQL的SELECT语句" class="headerlink" title="SQL的SELECT语句"></a>SQL的SELECT语句</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 从FROM指定【表中】，查询出【所有的】数据 *表示所有列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名称</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> 列名称 <span class="keyword">FROM</span> 表名称</span><br><span class="line"><span class="comment">-- 关键字对大小写不敏感，列名称要求大小写</span></span><br></pre></td></tr></table></figure><h2 id="SQL的INSERT-INTO语句"><a href="#SQL的INSERT-INTO语句" class="headerlink" title="SQL的INSERT INTO语句"></a>SQL的INSERT INTO语句</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 列的值通过VALUES 一一指定</span></span><br><span class="line"><span class="comment">-- 值和列要一一对应，多个列与值之间用英文逗号分隔</span></span><br><span class="line"><span class="comment">-- 对于字符串类型,要加&#x27;&#x27;包裹</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name(列<span class="number">1</span>，列<span class="number">2</span>，...) <span class="keyword">VALUES</span> (值<span class="number">1</span>，值<span class="number">2</span>，...)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users(username,password) <span class="keyword">VALUES</span>(<span class="string">&#x27;wukl&#x27;</span>,<span class="string">&#x27;131415926&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- INSERT INTO users SET ?(对象数据类型)</span></span><br></pre></td></tr></table></figure><h2 id="SQL的UPDATE语句"><a href="#SQL的UPDATE语句" class="headerlink" title="SQL的UPDATE语句"></a>SQL的UPDATE语句</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1.用update指定要更新哪个表中的数据</span></span><br><span class="line"><span class="comment">-- 2.用SET指定列对应的新值</span></span><br><span class="line"><span class="comment">-- 3.用WHERE指定更新的条件</span></span><br><span class="line">UPDATA 表名称 <span class="keyword">SET</span> 列名称 <span class="operator">=</span> 新值 <span class="keyword">WHERE</span> 列名称<span class="operator">=</span>新值</span><br><span class="line"><span class="comment">-- 更新若干列</span></span><br><span class="line"><span class="keyword">UPDATE</span> users <span class="keyword">SET</span> 列名称<span class="operator">=</span>新值 列名称 <span class="operator">=</span> 新值 <span class="keyword">WHERE</span> ID<span class="operator">=</span><span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="SQL的DELETE语句"><a href="#SQL的DELETE语句" class="headerlink" title="SQL的DELETE语句"></a>SQL的DELETE语句</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 切记添加选择条件</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表名称 <span class="keyword">WHERE</span> 列名称 <span class="operator">=</span>值（唯一匹配项）</span><br></pre></td></tr></table></figure><h2 id="WHERE"><a href="#WHERE" class="headerlink" title="WHERE"></a>WHERE</h2><p>WHER用于限定选择的标准，用于SELECT、UPDATE、DELECT语句中，皆可以使用WHERE来限定选择标准</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> status<span class="operator">=</span><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> id<span class="operator">&gt;</span><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> usersname<span class="operator">!=</span><span class="string">&#x27;admin&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="SQL的AND和OR运算符"><a href="#SQL的AND和OR运算符" class="headerlink" title="SQL的AND和OR运算符"></a>SQL的AND和OR运算符</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> status<span class="operator">=</span><span class="number">0</span> <span class="keyword">AND</span> id<span class="operator">&lt;</span><span class="number">3</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> status<span class="operator">=</span><span class="number">0</span> <span class="keyword">OR</span> id<span class="operator">&lt;</span><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="SQL的ORDER-BY-子句"><a href="#SQL的ORDER-BY-子句" class="headerlink" title="SQL的ORDER BY 子句"></a>SQL的ORDER BY 子句</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 升序排序 </span></span><br><span class="line"><span class="comment">-- ASC关键字代表升序排序 （默认也是按升序排序）</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">ORDER</span> <span class="keyword">BY</span> status （<span class="keyword">ASC</span>）；</span><br><span class="line"><span class="comment">-- DESC按照降序排序</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">ORDER</span> <span class="keyword">BY</span> status <span class="keyword">DESC</span>;</span><br><span class="line"><span class="comment">-- 对users表中的数据，先按照status进行降序排序(大范围)，再按照username的字母顺序，进行升序排序（小范围）</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">ORDER</span> <span class="keyword">BY</span> status <span class="keyword">DESC</span>,usersname <span class="keyword">ASC</span></span><br></pre></td></tr></table></figure><h2 id="SQL的COUNT-函数"><a href="#SQL的COUNT-函数" class="headerlink" title="SQL的COUNT(*)函数"></a>SQL的COUNT(*)函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- COUNT(*)函数用于返回查询结果的总数据条数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span> (<span class="operator">*</span>) <span class="keyword">FROM</span> 表名称</span><br><span class="line"><span class="comment">-- 统计所有status为0的总数据条数</span></span><br><span class="line">SLECT <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> status<span class="operator">=</span><span class="number">0</span></span><br><span class="line"><span class="comment">-- 使用AS为列设置别名</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> total <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> status<span class="operator">=</span><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="在项目中操作数据库"><a href="#在项目中操作数据库" class="headerlink" title="在项目中操作数据库"></a>在项目中操作数据库</h2><ol><li>安装MYSQL数据库第三方模块（mysql）</li><li>通过mysql模块连接到MYSQL数据库</li><li>通过mysql模块执行SQL语句</li></ol><p>1.安装mysql</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i mysql</span><br></pre></td></tr></table></figure><p>2.配置mysql</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导入mysql模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mysql=<span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//建立与MYSQL数据库的连接</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span>  db = mysql.<span class="title function_">createPool</span>(&#123;</span><br><span class="line"></span><br><span class="line"><span class="attr">host</span>:<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="comment">//数据库的ip地址</span></span><br><span class="line"><span class="attr">user</span>:<span class="string">&#x27;root &#x27;</span>,<span class="comment">//登录数据库的账号</span></span><br><span class="line"><span class="attr">port</span>:<span class="string">&#x27;80&#x27;</span>, <span class="comment">//端口</span></span><br><span class="line"><span class="attr">password</span>:<span class="string">&#x27;admin123&#x27;</span> <span class="comment">//登录数据库的密码</span></span><br><span class="line"><span class="attr">database</span>:<span class="string">&#x27;my_db_01&#x27;</span><span class="comment">//指定要操作哪个数据库</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>3.测试mysql模块能否正常运行</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">db.<span class="title function_">query</span>(<span class="string">&#x27;SELECT 1&#x27;</span>,<span class="function">(<span class="params">err,results</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(err) <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span><br><span class="line"><span class="comment">//只要能打印出[RowDtaPacket&#123;&#x27;1&#x27;:1&#125;]结果，就证明数据库连接正常</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(results)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="使用mysql模块操作MYSQL数据库"><a href="#使用mysql模块操作MYSQL数据库" class="headerlink" title="使用mysql模块操作MYSQL数据库"></a>使用mysql模块操作MYSQL数据库</h2><h4 id="1-查询数据"><a href="#1-查询数据" class="headerlink" title="1.查询数据"></a>1.查询数据</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//查询users 表中所有用户的数据</span></span><br><span class="line"></span><br><span class="line">db.<span class="title function_">query</span>(<span class="string">&#x27;SELECT * FROM users&#x27;</span>,<span class="function">(<span class="params">err,results</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(results) </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="2-插入数据"><a href="#2-插入数据" class="headerlink" title="2.插入数据"></a>2.插入数据</h4><p>向users表中新增数据，其中usersname为Spider-man,password为pcc321.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//要插入到users表中的数据对象</span></span><br><span class="line"><span class="keyword">const</span> user=&#123;<span class="attr">username</span>:<span class="string">&#x27;Spider-Man&#x27;</span>,<span class="attr">password</span>:<span class="string">&#x27;pcc321&#x27;</span>&#125;</span><br><span class="line"><span class="comment">//待执行的SQL语句，其中英文？代表占位符</span></span><br><span class="line"><span class="keyword">const</span> sqlStr=<span class="string">&#x27;INSERT INTO users (username,password) VALUES (?,?)&#x27;</span></span><br><span class="line">db.<span class="title function_">query</span>(sql.<span class="property">Str</span>,[user.<span class="property">usersname</span>,user.<span class="property">password</span>],(err,results)= &gt; &#123;</span><br><span class="line"><span class="keyword">if</span>(err) <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(results)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//便捷方法</span></span><br><span class="line"><span class="keyword">const</span> sql=<span class="string">&#x27;INSERT INTO users SET ?&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user=&#123;<span class="attr">username</span>:<span class="string">&#x27;w&#x27;</span>,<span class="attr">password</span>:<span class="string">&#x27;123&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db.<span class="title function_">query</span>(sql,user,<span class="function">(<span class="params">err,results</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(err) <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (results.<span class="property">affectedRows</span>==<span class="number">1</span>) <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;插入数据成功&#x27;</span>)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="3-更新数据"><a href="#3-更新数据" class="headerlink" title="3.更新数据"></a>3.更新数据</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> sql=<span class="string">&#x27;UPDATE users SET username=?,password=? WHERE id=?&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user=&#123;<span class="attr">id</span>:<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">username</span>:<span class="string">&#x27;kl&#x27;</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">password</span>:<span class="string">&#x27;789&#x27;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">db.<span class="title function_">query</span>(sql,[user.<span class="property">username</span>,user.<span class="property">password</span>,user.<span class="property">id</span>],<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(err) <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(results.<span class="property">affectedRows</span>==<span class="number">1</span>) <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;更新数据成功&#x27;</span>)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>便捷方法：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> sql=<span class="string">&#x27;UPDATE users SET ? WHERE id=?&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user=&#123;<span class="attr">id</span>:<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">username</span>:<span class="string">&#x27;kl&#x27;</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">password</span>:<span class="string">&#x27;789&#x27;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">db.<span class="title function_">query</span>(sql,[user,user.<span class="property">id</span>],<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(err) <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(results.<span class="property">affectedRows</span>==<span class="number">1</span>) <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;更新数据成功&#x27;</span>)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="4-删除数据"><a href="#4-删除数据" class="headerlink" title="4.删除数据"></a>4.删除数据</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> sql=<span class="string">&#x27;DELETE FROM users WHERE id=?&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//调用db.query()执行SQL语句的同时，为占位符指定具体的值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//注意：如果SQL语句中有多个占位符，必须使用数组为每个占位符指定具体的值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    如果SQL语句中只有一个占位符，则可以省略数组</span></span><br><span class="line"></span><br><span class="line">db.<span class="title function_">query</span>(sql,<span class="number">4</span>,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(err) <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(results.<span class="property">affectedRows</span>==<span class="number">1</span>) <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;删除数据成功&#x27;</span>)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="标记删除"><a href="#标记删除" class="headerlink" title="标记删除"></a>标记删除</h5><p><strong>为防止数据误删，推荐使用标记删除，即在表中设置status这样的状态字段来标记数据是否被删除</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> sql=<span class="string">&#x27;UPDATE users SET status=? WHERE id=?&#x27;</span></span><br><span class="line"></span><br><span class="line">db.<span class="title function_">query</span>(sql,[<span class="number">1</span>,<span class="number">4</span>],<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(err) <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(results.<span class="property">affectedRows</span>==<span class="number">1</span>) <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;标记删除成功&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> -Node.js </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
